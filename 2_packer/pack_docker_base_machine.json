{
  "description": "Create a base CentOS 8 machine running docker that can be used for both k8s master and k8s worker nodes",
  "variables": {
    "home": "{{env `HOME`}}",
    "aws_access_key": "",
    "aws_secret_key": "",
    "region": "eu-west-2"
  },
  "builders": [
    {
      "type": "amazon-ebs",
      "name": "k8s-base-docker-machine",
      "ami_name": "k8s-base-docker-machine {{isotime \"2006-01-02\"}}{{uuid}}",
      "instance_type": "t2.large",
      "region": "{{user `region`}}",
      "source_ami": "ami-00c89583fee7b879d",
      "ssh_username": "centos",
      "access_key": "{{user `aws_access_key`}}",
      "secret_key": "{{user `aws_secret_key`}}",
      "tags": {
        "Name": "kuberneteslab0001.k8s-base-machine"
      }
    }
  ],

  "provisioners": [
    {
      "type": "file",
      "source": "{{user `home`}}/.ssh/ngx-certs",
      "destination": "certs",
      "only": [
        "k8s-base-docker-machine"
      ]
    },
    {
      "type": "file",
      "source": "build_nginx_plus_images.sh",
      "destination": "build_nginx_plus_images.sh",
      "only": [
        "k8s-base-docker-machine"
      ]
    },
    {
      "type": "file",
      "source": "build_nginx_plus_ingress_controller_image.sh",
      "destination": "build_nginx_plus_ingress_controller_image.sh",
      "only": [
        "k8s-base-docker-machine"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "#mkdir certs"
      ],
      "only": [
        "k8s-base-docker-machine"
      ]
    },
    {
      "type": "file",
      "source": "../certs/",
      "destination": "certs",
      "only": [
        "k8s-base-docker-machine"
      ]
    },

    {
      "type": "file",
      "source": "hosts",
      "destination": "hosts",
      "only": [
        "k8s-base-docker-machine"
      ]
    },
    {
      "type": "file",
      "source": "install-kubernetes-master.sh",
      "destination": "install-kubernetes-master.sh",
      "only": [
        "k8s-base-docker-machine"
      ]
    },
    {
      "type": "file",
      "source": "install_nginx_ingress_controller.sh",
      "destination": "install_nginx_ingress_controller.sh",
      "only": [
        "k8s-base-docker-machine"
      ]
    },
     {
      "type": "file",
      "source": "setup_selinux_and_fw.sh",
      "destination": "setup_selinux_and_fw.sh",
      "only": [
        "k8s-base-docker-machine"
      ]
    },
    {
      "type": "file",
      "source": "install_docker.sh",
      "destination": "install_docker.sh",
      "only": [
        "k8s-base-docker-machine"
      ]
    },
    {
      "type": "file",
      "source": "setup_registry.sh",
      "destination": "setup_registry.sh",
      "only": [
        "k8s-base-docker-machine"
      ]
    },
    {
      "type": "file",
      "source": "install_nfs_server.sh",
      "destination": "install_nfs_server.sh",
      "only": [
        "k8s-base-docker-machine"
      ]
    },
    {
      "type": "file",
      "source": "install_helm_and_APIM.sh",
      "destination": "install_helm_and_APIM.sh",
      "only": [
        "k8s-base-docker-machine"
      ]
    },
    {
      "type": "file",
      "source": "install_istio.sh",
      "destination": "install_istio.sh",
      "only": [
        "k8s-base-docker-machine"
      ]
    },
    {
      "type": "file",
      "source": "Dockerfile",
      "destination": "Dockerfile",
      "only": [
        "k8s-base-docker-machine"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "#sudo -H dnf update -y",
		"#sudo dnf install firewalld -y",
		"#sudo systemctl enable firewalld",
		"#sudo systemctl start firewalld",
		"sudo cat hosts /etc/hosts",
		"sudo sh setup_selinux_and_fw.sh",
		"sudo sh install_docker.sh",
		"sudo dnf install bind-utils -y",
		
        "#sudo -H apt install -y python-pip",
        "#sudo -H pip install ansible",
		
		
		"ssh-keygen -f /tmp/sshkey -q -N ''",
		"chmod +r /tmp/sshkey",
		"mkdir k8s_configuration"
      ],
      "only": [
        "k8s-base-docker-machine"
      ]
    },
   {
      "type": "file",
      "destination": "{{user `home`}}/.ssh/k8s-key.pub",
      "source": "/tmp/sshkey.pub",
	  "direction" : "download",
      "only": [
        "k8s-base-docker-machine"
      ]
    },
   {
      "type": "file",
      "destination": "{{user `home`}}/.ssh/k8s-key.pem",
      "source": "/tmp/sshkey",
	  "direction" : "download",
      "only": [
        "k8s-base-docker-machine"
      ]
    },
   {
      "type": "file",
      "destination": "../3_terraform/k8s-key.pem",
      "source": "/tmp/sshkey",
	  "direction" : "download",
      "only": [
        "k8s-base-docker-machine"
      ]
    },

   {
      "type": "file",
      "destination": "keys/k8s-key.pem",
      "source": "/tmp/sshkey",
	  "direction" : "download",
      "only": [
        "k8s-base-docker-machine"
      ]
    },
    {
      "type": "file",
      "source": "k8s_configuration",
      "destination": "k8s_configuration",
      "only": [
        "k8s-base-docker-machine"
      ]
    },
	{
      "type": "file",
      "source": "kubeadm.config",
      "destination": "kubeadm.config",
      "only": [
        "k8s-base-docker-machine"
      ]
    },
    {
      "type": "shell",
      "inline": [
 
		"echo '---------------------------------------------------------------------'",
		"echo '------------- DOWNLOADING NGINX SERVICE MESH PACKAGES ---------------'",
		"echo '---------------------------------------------------------------------'",
		"curl https://emea-terraform-and-packer.s3.eu-west-2.amazonaws.com/nginx-meshctl_linux.gz --output nginx-meshctl_linux.gz",
        "curl https://emea-terraform-and-packer.s3.eu-west-2.amazonaws.com/nginx-mesh-images-0.6.0.tar.gz --output nginx-mesh-images-0.6.0.tar.gz"
      ],
      "only": [
        "k8s-base-docker-machine"
      ]
    },
	{
      "type": "file",
      "source": "setup-service-mesh-registry-images.sh",
      "destination": "setup-service-mesh-registry-images.sh",
      "only": [
        "k8s-base-docker-machine"
      ]
    },
	{
      "type": "file",
      "source": "install_NGINX_Service_Mesh.sh",
      "destination": "install_NGINX_Service_Mesh.sh",
      "only": [
        "k8s-base-docker-machine"
      ]
    }

  ]
}
